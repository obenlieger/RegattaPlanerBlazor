<EditForm Model="Regatta" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="Name">Name</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Name" />
            <ValidationMessage For="@(() => Regatta.Name)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Ausrichter</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Organizer" />
            <ValidationMessage For="@(() => Regatta.Organizer)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Ausrichtender Verein</label>
        <div>
            <select @bind="@Regatta.ClubId" class="form-control">
                @foreach (var club in Clubs)
                {
                    <option value="@club.ClubId">@club.ShortName</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Kategorie</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Category" />
            <ValidationMessage For="@(() => Regatta.Category)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Von</label>
        <div>
            <InputDate class="form-control" @bind-Value="@Regatta.FromDate" />
            <ValidationMessage For="@(() => Regatta.FromDate)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Bis</label>
        <div>
            <InputDate class="form-control" @bind-Value="@Regatta.ToDate" />
            <ValidationMessage For="@(() => Regatta.ToDate)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Gewässer</label>
        <div>
            <InputSelect class="form-control" @bind-Value="@Regatta.WaterId">
                @foreach (var water in Waters)
                {
                    <option value="@water.WaterId">@water.Name</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Wassertiefe</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@Regatta.Waterdepth" />
            <ValidationMessage For="@(() => Regatta.Waterdepth)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Startbahnen</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@Regatta.Startslots" />
            <ValidationMessage For="@(() => Regatta.Startslots)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Anzahl Starter Vorjahr</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@Regatta.StartersLastYear" />
            <ValidationMessage For="@(() => Regatta.StartersLastYear)" />
        </div>
    </div>
    <div class="form-group">
        <label>Altersklassen:</label>
        <div>
            <MultipleSelector Selected="MSMOldclassSelected" NoSelected="MSMOldclassNotSelected"></MultipleSelector>
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Kommentar</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.ReportText" />
            <ValidationMessage For="@(() => Regatta.ReportText)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Meldeschluss</label>
        <div>
            <InputDate class="form-control" @bind-Value="@Regatta.ReportSchedule" />
            <ValidationMessage For="@(() => Regatta.ReportSchedule)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Meldeeröffnung</label>
        <div>
            <InputDate class="form-control" @bind-Value="@Regatta.ReportOpening" />
            <ValidationMessage For="@(() => Regatta.ReportOpening)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Meldeadresse</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.ReportAddress" />
            <ValidationMessage For="@(() => Regatta.ReportAddress)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Telefon</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.ReportTel" />
            <ValidationMessage For="@(() => Regatta.ReportTel)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">E-Mail</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.ReportMail" />
            <ValidationMessage For="@(() => Regatta.ReportMail)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Fax</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.ReportFax" />
            <ValidationMessage For="@(() => Regatta.ReportFax)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Kampfrichter</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Judge" />
            <ValidationMessage For="@(() => Regatta.Judge)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Medaillen</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Awards" />
            <ValidationMessage For="@(() => Regatta.Awards)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Sicherheit</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Security" />
            <ValidationMessage For="@(() => Regatta.Security)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Meldetext</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.ScheduleText" />
            <ValidationMessage For="@(() => Regatta.ScheduleText)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Teilnahmegebühr</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@Regatta.SubscriberFee" />
            <ValidationMessage For="@(() => Regatta.SubscriberFee)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Übernachtung</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Accomodation" />
            <ValidationMessage For="@(() => Regatta.Accomodation)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Kommentar</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Comment" />
            <ValidationMessage For="@(() => Regatta.Comment)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Organizer">Verpflegung</label>
        <div>
            <InputText class="form-control" @bind-Value="@Regatta.Catering" />
            <ValidationMessage For="@(() => Regatta.Catering)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Speichern</button>
</EditForm>

@code {
    [Parameter] public Regatta Regatta { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Club> Clubs { get; set; }
    [Parameter] public List<Water> Waters { get; set; }
    [Parameter] public List<Oldclass> SelectedOldclasses { get; set; } = new List<Oldclass>();
    [Parameter] public List<Oldclass> NotSelectedOldclasses { get; set; } = new List<Oldclass>();

    private List<MultipleSelectorModel> MSMOldclassSelected = new List<MultipleSelectorModel>();
    private List<MultipleSelectorModel> MSMOldclassNotSelected = new List<MultipleSelectorModel>();

    protected override void OnInitialized()
    {
        MSMOldclassSelected = SelectedOldclasses.Select(x => new MultipleSelectorModel(x.OldclassId.ToString(), x.Name)).ToList();
        MSMOldclassNotSelected = NotSelectedOldclasses.Select(x => new MultipleSelectorModel(x.OldclassId.ToString(), x.Name)).ToList();
    }

    private async Task OnDataAnnotationsValidated()
    {
        Regatta.RegattaOldclasses = MSMOldclassSelected.Select(x => new RegattaOldclass { OldclassId = int.Parse(x.Key) }).ToList();

        await OnValidSubmit.InvokeAsync(null);
    }
}
